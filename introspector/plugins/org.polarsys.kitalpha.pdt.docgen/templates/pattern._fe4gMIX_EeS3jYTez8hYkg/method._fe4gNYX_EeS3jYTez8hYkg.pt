<%
String outputFolder = ctx.getValue("outputFolder").toString();
String projectName = ctx.getValue("projectName").toString();
String text = org.polarsys.kitalpha.pdt.docgen.helpers.Helpers.getLabel((EclipseElement)element);
boolean diagramsInclusion = Helpers.diagramsInclusionIsChecked();
try {
	text = EscapeChars.forHTML(text);
} catch (NullPointerException e) {
	System.err.println("Caught exception while converting text into html:" + e.getMessage());
	text = "";
}
%><div style="position: fixed; top: 0; left: 1%; width: 98%; z-index: 2; background-color: white; ";>
<%
String hyperlink = "";
EObject parent = element.eContainer();
if (parent != null && parent instanceof EclipseElement) {
	hyperlink = org.polarsys.kitalpha.pdt.docgen.helpers.Helpers
			.getTypeHyperLink((EclipseElement) parent, Helpers.getLabel((EclipseElement) parent));
	String parentClassName = parent.eClass().getName();%>
	<p><strong><%=parentClassName%> :</strong> <%=hyperlink%></p><%
}
%>
<%String imageFileName = LabelProviderHelper.getImageFileName(element,
						projectName, outputFolder);%>
<h1><img src="../icon/<%=imageFileName%>" alt="" /> <%=text%></h1>
<hr style="width:98%; align : center; " /> 
</div>

<div style="position: absolute; top: 160px; left: 1%; z-index: 1; width: 98%;">

<%
String extensionPointID = ((ExtensionPoint) element).getId();
if (extensionPointID == null) {
	extensionPointID = "ExtensionPoint Id not found";
}

%>
<%
				
EObject obj = ((org.polarsys.kitalpha.pdt.metamodel.model.platform.Plugin)(element.eContainer().eContainer()));
List<ExtensionPoint> extensionPoints = new ArrayList<ExtensionPoint>();
ExtensionPoint lastExtensionPoint = null;
if(obj instanceof Plugin){
	// si mon plugin n'a pas d'extensions
	if (((Plugin)obj).getExtensions().getExtensions().isEmpty()){
		if(((Plugin)obj).getExtensionPoints().getExtensionPoints() != null){
			extensionPoints = ((Plugin)obj).getExtensionPoints().getExtensionPoints();
			for (ExtensionPoint extensionPoint : extensionPoints) {
					int listSize = extensionPoints.size();
					int lastIndex = extensionPoints.indexOf(extensionPoint);
					//je suis arrivé à la dernière extension 
					if((listSize-1) == lastIndex){
						lastExtensionPoint = extensionPoint;
						break;
					}
				}
		}
	}
}

%>
<%
 String pageKey = extensionPointID;
 String extensionPointPage = org.polarsys.kitalpha.pdt.docgen.helpers.ExtensionPointsHelpers.getExtensionPointsPage(pageKey);
%>

<%=extensionPointPage%>


<%
String extensionPointKey = extensionPointID + " Extension Point schema";
DRepresentation diagram = org.polarsys.kitalpha.pdt.docgen.helpers.ExtensionPointsHelpers.getExtensionPointsDiagram(extensionPointKey);%>

<%
if (diagram != null){%>
<h2>Representation</h2>
<%}%>

</p>
<%

if((diagram instanceof DSemanticDiagram) && (((DSemanticDiagram) diagram).getDescription().getName().equals("Extension Point schema"))) {
String generatedFolder = fileNameService.getFileName(((DSemanticDiagram)diagram).getTarget());%>
<p><strong><%=((DSemanticDiagram) diagram).getDescription().getName()%></strong></p>
<%@ egf:patternCall patternId="platform:/plugin/org.polarsys.kitalpha.doc.gen.business.core/egf/HTMLDocGenCommon.fcore#LogicalName=org.polarsys.kitalpha.doc.gen.business.core.sirius.DiagramGenerator" args="diagram:diagram, outputFolder:outputFolder, projectName:projectName, generatedFolder:generatedFolder, fileNameService:fileNameService, helper:helper"%>
<%}
%>

<%
if(diagramsInclusion){
	if (lastExtensionPoint == (ExtensionPoint)element){
		if(((Plugin)obj) != null){
			AIRDHelpers.INSTANCE.clearCurrentAird();
			AIRDHelpers.INSTANCE.cleanAllMaps();
		}
	}
}
				
%>
